// subcategory: intro, fundamentals, methods, string, array, hashmap, 
export default [
    {
        id: 1,
        type: 'radio',
        category: 'java',
        subcategory: 'intro',
        title: 'Compile into',
        question: "What does the Java compiler \`javac\` produce?",
        options: [
            'machine code',
            'source code',
            'byte code',
            'HTML',
        ],
        random: true,
        answer: 'byte code',
    },
    {
        id: 2,
        type: 'radio',
        category: 'java',
        subcategory: 'intro',
        title: 'JVM',
        question: "What is the purpose of the Java Virtual Machine?",
        options: [
            'it is a debugger for Java programs',
            'to translate Java source code to byte code',
            'to execute Java byte code',
        ],
        random: true,
        answer: 'to execute Java byte code',
    },
    {
        id: 3,
        type: 'radio',
        category: 'java',
        subcategory: 'intro',
        title: 'Compiler command',
        question: "Which command is used to compile a Java program?",
        options: [
            '\`java\`',
            '\`javac\`',
            '\`compile\`',
            '\`run\`',
        ],
        random: true,
        answer: '\`javac\`',
    },
    {
        id: 4,
        type: 'radio',
        category: 'java',
        subcategory: 'intro',
        title: 'Byte my code',
        question: "What is byte code?",
        options: [
            'human-readable source code',
            'machine code for the CPU',
            'code that is executed by the JVM',
            'a type of error in Java',
        ],
        random: true,
        answer: 'code that is executed by the JVM',
        description: '**Byte code** is an intermediate code generated by compilers that can be executed by the JVM'
    },
    {
        id: 5,
        type: 'radio',
        category: 'java',
        subcategory: 'intro',
        title: 'Just very merry',
        question: "What is the JVM?",
        options: [
            'a text editor for writing Java programs',
            'a compiler that translates Java source code to byte code',
            'a virtual machine that executes Java byte code',
            'a library for Java graphics',
        ],
        random: true,
        answer: 'a virtual machine that executes Java byte code',
    },
    {
        id: 6,
        type: 'radio',
        category: 'java',
        subcategory: 'intro',
        title: 'Compiler generation',
        question: "What does the Java compiler generate?",
        options: [
            'source code',
            'byte code',
            'machine code',
        ],
        random: true,
        answer: 'byte code',
    },
    {
        id: 7,
        type: 'radio',
        category: 'java',
        subcategory: 'intro',
        title: 'The source file',
        question: "In Java, what is a source file?",
        options: [
            'a file containing machine code',
            'a file containing Java programming statements',
            'a file containing byte code',
        ],
        random: true,
        answer: 'a file containing Java programming statements',
        description: 'A **source file** is a file containing Java programming statements, saved with a \`.java\` extension.'
    },
    {
        id: 8,
        type: 'radio',
        category: 'java',
        subcategory: 'intro',
        title: 'Compile this',
        question: "What is a compiler?",
        options: [
            'a program that translates source code into machine code',
            'a program that translates source code into byte code',
            'a program that executes byte code',
            'a program that manages memory',
        ],
        random: true,
        answer: 'a program that translates source code into byte code',
    },
    {
        id: 9,
        type: 'radio',
        category: 'java',
        subcategory: 'intro',
        title: 'Machine vs byte',
        question: "What is the difference between machine language code and byte code?",
        options: [
            'machine language code is executed directly by the CPU, while byte code is executed by the Java Virtual Machine',
            'byte code is human-readable, while machine language code is not',
            'byte code is used exclusively in Java, while machine language code is used by (most) other programming languages',
            'there is no difference, they are synonyms',
        ],
        random: true,
        answer: 'machine language code is executed directly by the CPU, while byte code is executed by the Java Virtual Machine'
    },
    {
        id: 10,
        type: 'radio',
        category: 'java',
        subcategory: 'fundamentals',
        title: 'File name',
        question: "All Java source code filenames must end with what?",
        options: [
            'nothing is needed at the end of the filename',
            'a semicolon',
            '\`.class\`',
            '\`.java\`',
            'none of the above'
        ],
        random: false,
        answer: '\`.java\`'
    },
    {
        id: 11,
        type: 'checkbox',
        category: 'java',
        subcategory: 'fundamentals',
        title: 'Name game',
        question: "Which of the following are illegal variable names?",
        options: [
            '\`x\`',
            '\`99bottles\`',
            '\`july97\`',
            '\`theSalesFigureForFiscalYear17\`',
            '\`r&d\`',
            '\`graded_report\`',
        ],
        random: true,
        answer: ['\`99bottles\`', '\`r&d\`']
    },
    {
        id: 12,
        type: 'radio',
        category: 'java',
        subcategory: 'fundamentals',
        title: 'Primitive or not?',
        question: "Strings are not primitive data types",
        options: [
            'true',
            'false',
        ],
        random: true,
        answer: 'true'
    },
    {
        id: 13,
        type: 'radio',
        category: 'java',
        subcategory: 'fundamentals',
        title: 'What are these?',
        question: `The following data are all examples of _________
~~~java
69
'P'
"Hello nerd"
2.345
~~~
        `,
        options: [
            'variables',
            'literals',
            'strings',
            'none of the above'
        ],
        random: false,
        answer: 'literals',
    },
    {
        id: 14,
        type: 'radio',
        category: 'java',
        subcategory: 'fundamentals',
        title: 'Conal or finst?',
        question: "The key word to declare a named constant is...",
        options: [
            '\`const\`',
            '\`final\`',
            '\`Const\`',
            '\`Final\`',
            '\`CONST\`',
            '\`FINAL\`',
        ],
        random: true,
        answer: '\`final\`',
    },
    {
        id: 15,
        type: 'radio',
        category: 'java',
        subcategory: 'methods',
        title: 'Scanner says',
        question: "Which \`Scanner\` class method would you use to read a string as input?",
        options: [
            '\`nextString\`',
            '\`nextLine\`',
            '\`readString\`',
            '\`readLine\`',
            '\`getString\`',
            '\`getLine\`',
        ],
        random: true,
        answer: '\`nextLine\`',
    },
    {
        id: 16,
        type: 'radio',
        category: 'java',
        subcategory: 'methods',
        title: 'Char check',
        question: `What will the following code output?
~~~java
String message = "Have a great day!";
System.out.println(message.charAt(5));
~~~
`,
        options: [
            '\`H\`',
            '\`a\`',
            '\`v\`',
            '\`e\`',
            '\` \`',
            '\`g\`',
            '\`r\`',
            '\`t\`',
            '\`d\`',
            '\`y\`',
            '\`!\`',
        ],
        random: false,
        answer: '\`a\`',
    },
    {
        id: 17,
        type: 'radio',
        category: 'java',
        subcategory: 'fundamentals',
        title: 'Memory mystery',
        question: "What is the value stored in memory for a reference variable?",
        options: [
            'the actual data',
            'the variable name',
            'the memory address',
            'the data type',
        ],
        random: true,
        answer: 'the memory address',
        description: 'The memory address of the object is stored'
    },
    {
        id: 18,
        type: 'radio',
        title: 'Exit strategy',
        category: 'java',
        subcategory: 'methods',
        question: "What is the purpose of \`System.exit(0);\` when using JOptionPane dialogs?",
        options: [
            'to display a message',
            'to close the dialog box',
            'to terminate the program and its threads',
            'to import the JOptionPane class',
        ],
        random: true,
        answer: 'to terminate the program and its threads',
    },
    {
        id: 19,
        type: 'radio',
        category: 'java',
        subcategory: 'methods',
        title: 'Scanner surprise?',
        question: "What happens if you use \`nextInt()\` followed by \`nextLine()\` without an extra \`nextLine()\` in between?",
        options: [
            'the program crashes',
            'the \`nextLine()\` reads the leftover newline and returns an empty string',
            'the \`nextLine()\` reads the correct input',
            'the \`nextLine()\` is skipped'
        ],
        random: true,
        answer: 'the \`nextLine()\` reads the leftover newline and returns an empty string',
    },
    {
        id: 20,
        type: 'radio',
        category: 'java',
        subcategory: 'string',
        title: 'String -> int',
        question: "Which method converts a String to an int in Java?",
        options: [
            '\`Integer.valueOf()\`',
            '\`Integer.parseInt()\`',
            '\`String.toInt()\`',
            '\`Int.parseString()\`',
        ],
        random: true,
        answer: '\`Integer.parseInt()\`',
    },
    {
        id: 21,
        type: 'radio',
        category: 'java',
        subcategory: 'array',
        title: 'Too many elements',
        question: "Which method would you use to get the number of elements in an ArrayList?",
        options: [
            '\`length\`',
            '\`size()\`',
            '\`count()\`',
            '\`getLength()\`',
        ],
        random: true,
        answer: '\`size()\`',
    },
    {
        id: 22,
        type: 'radio',
        category: 'java',
        subcategory: 'hashmap',
        title: 'HashMap gossip',
        question: "Which statement about HashMaps is true?",
        options: [
            'they guarantee the order of elements',
            'they can have duplicate keys',
            'they allow you to replace values for existing keys',
            'they can only store String keys',
        ],
        random: true,
        answer: 'they allow you to replace values for existing keys',
    },
    {
        id: 23,
        type: 'radio',
        category: 'java',
        subcategory: 'hashmap',
        title: 'Map & HashMap',
        question: "What is the difference between Map and HashMap in Java?",
        options: [
            'Map is a class, HashMap is an interface',
            'Map is an interface, HashMap is a class',
            'No difference, both are interfaces',
            'no difference, both are classes',
        ],
        random: true,
        answer: 'Map is an interface, HashMap is a class',
        description: 'HashMaps are classes that implement the Map interface.'
    },

    {
        id: 24,
        type: 'radio',
        category: 'java',
        subcategory: 'array',
        title: 'aFord array memory?',
        question: `What will happen if you run the following code: 
~~~java
String[] cars = new String[3];
cars[3] = "Ford";
~~~`,
        options: [
            'Adds \`Ford\` to the array',
            'Replaces the last element with \`Ford\`',
            'Throws an error',
            'Resizes the array to fit \`Ford\`',
        ],
        random: true,
        answer: 'Throws an error',
        description: 'It will throw the \`ArrayIndexOutOfBoundsException\`'
    },
    {
        id: 25,
        type: 'radio',
        category: 'java',
        subcategory: 'array',
        title: 'Adding to ArrayList',
        question: `Which method can you use to add an element to the end of an ArrayList?`,
        options: [
            '\`add()\`',
            '\`append()\`',
            '\`push()\`',
            '\`insert()\`',
        ],
        random: true,
        answer: '\`add()\`',
    },
    {
        id: 26,
        type: 'radio',
        category: 'java',
        subcategory: 'array',
        title: 'To Kim or not to Kim',
        question: `What does \`friendsAgain2.set(0, "Kim")\` do?`,
        options: [
            'adds \`Kim\` to the end of the ArrayList',
            'removes the first element',
            'replaces the first element with \`Kim\`',
            'sorts the ArrayList',
        ],
        random: true,
        answer: 'replaces the first element with \`Kim\`',
    },
    {
        id: 27,
        type: 'radio',
        category: 'java',
        subcategory: 'array',
        title: 'Not in this list',
        question: `Which of these methods does not exist for ArrayList in Java?`,
        options: [
            '\`size()\`',
            '\`get()\`',
            '\`remove()\`',
            '\`delete()\`',
        ],
        random: true,
        answer: '\`delete()\`',
    },
    {
        id: 28,
        type: 'radio',
        category: 'java',
        subcategory: 'hashmap',
        title: 'Hash value',
        question: `Which of these is a valid way to check if a HashMap contains or has a value?`,
        options: [
            '\`containsValue()\`',
            '\`hasValue()\`',
            '\`findValue()\`',
            '\`valueExists()\`',
        ],
        random: true,
        answer: '\`containsValue()\`',
    },
]